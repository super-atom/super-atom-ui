extends ../../layouts/base
block header
  +header('example')

block content
  .section-wrap
    section.section.section-introduction
      .section__title-wrap
        h1.section__title 본인 소개
      .section__content
        p 안녕하세요. 미디어포스앤컴퍼니 웹 퍼블리싱팀 이주석 선임입니다. 이번 2021년 우리은행 프로젝트로 만나게 되어서 반갑습니다.
        p 저는 파견 근무도, 금융권 프로젝트도 처음입니다. 부족한 부분을 이끌어주실 동료분들께 미리 감사의 말씀을 올립니다.
        p 동료분들의 목표와 마찬가지로 저는 적극적인 의사소통을 통하여 성공적인 프로젝트 완수를 달성하고자 합니다.
        p 저는 역할 내에서 가장 경험이 적은 입장으로써 상황에 따라 PL과 다른 동료가 이끄는 대로 따를 것임을 미리 밝힙니다.
        p 저는 제가 할 수 있는 범위 내에서 유의미할 수 있다고 생각되는 이 도구의 사용을 제안하고자 합니다. 도구 설명을 할 수 있는 시간을 할애 해주셔서 감사합니다.
    section.section.section-persuade
      .section__title-wrap
        h1.section__title 도구 사용 제안
      .section__content
        .txt-wrap
          p 제안에 앞서 SUPER-ATOM-UI 사용에 대해 발생하는 이슈는 제가 전적으로 책임지고 해결할 것을 선언합니다.
          p 저는 우리은행 프로젝트 투입 전 한달 반 동안 이 도구를 만들었습니다. (21년 11월 1일 ~ 21년 12월 14일)
          p 저는 방어적인 사람입니다. 보수적인 조직에서 보수적인 작업을 하는 것에 무조건 반대하는 것이 아닙니다.
          p 그러나 우리는 메모장 대신 에디트 플러스를 쓰는 것. 그리고 에디트 플러스를 쓰는 것보다 VScode를 쓰는 것이 나은 이유를 생각해볼 수 있을 것 입니다.
        br
        .txt-wrap
          p 이 도구의 기본 골조를 이루는 Pug와 Sass는 세상에 탄생한지 약 10년이 넘어갑니다.
          p 이것들은 이제는 전 세계적으로 실무에서 많이 쓰이고 있으며 많은 제품 코드에 사용되고 있습니다.
          p 저는 약 6년 동안의 삽질과 제 분야의 전문지식을 쌓으면서 이제는 올바른 의사선택을 할 수 있게 되었다는 자기 확신이 듭니다.
          p 그렇게 선택한 도구의 모음이 바로 이 SUPER-ATOM-UI 입니다.
          p 도구 선택 기준은 특별한 이슈 없이 안정화 단계에 안착하여 전 세계에서 실제 제품에 사용되고 있는지 여부를 기준 삼았습니다.
        br
        .txt-wrap
          p 모든 프로그램은 한 개의 파일 속 main() 함수 안에 모든 코드를 작성할 수 있습니다. 그러나 우리는 그런식으로 프로그램을 작성하지 않습니다. 하나의 파일 속 하나의 함수 안에 모든 로직을 작성하는 것은 인간의 두뇌로는 적절하지 않기 때문입니다.
          p 따라서 코드는 적절히 분할되어야 하며, 휴먼 에러를 줄여야 합니다. 프로그램의 코드를 적절히 분할하는 것과 같은 이유로 Pug와 Sass를 사용하는 것입니다.
        br
        .txt-wrap
          p SUPER-ATOM-UI 에서는 Pug, Sass 의 Mixins 기능을 적극적으로 이용합니다. 이들은 정적인 마크업 언어와 CSS 에서도 프로그래밍 언어와 동일한 기능을 하도록 돕습니다.
          p 이것들의 최종 산출물은 결국 HTML, CSS, JS 이므로 문제될 것이 없습니다.
          p 또한 Pug, Sass, Ts 는 각각 HTML, CSS, JS 의 문법을 이해하고 있는 사용자라면 학습에 시간을 쏟을 필요도 없이 코드의 모양만으로 사용법을 유추하여 바로 사용할 수 있습니다.
          p 부디 편견을 갖지 않고 이 도구의 의의와 적절한 사용법에 대해 관심을 가져주셨으면 좋겠습니다.
    section.section.section-description
      .section__title-wrap
        h1.section__title SUPER-ATOM-UI
      .section__content
        .txt-wrap
          p 요약 : 모던 프론트엔드 개발 횐경 및 도구 모음
        .txt-wrap
          h2 목표
          p 프로젝트 완수를 위한 코드 안정성 및 생산성 향상.
        .txt-wrap
          h2.section__sub-title 의존성
          ul
            li Webpack v5 : 모든 의존성과 옵션과 라이브러리를 위해 의존
            li Babel : JS(또는 TS)로 모든 자원을 컨트롤해야 하므로 의존
            li Pug : HTML Templating을 해야 하므로 의존
            li Sass : CSS 코드 작성 시 생산성 향상을 위해 의존
            li PostCSS : CSSNext, Autoprefixer 를 사용해야만 하므로 의존
        .txt-wrap
          h2.section__sub-title 옵션
          ul
            li TypeScript
        .txt-wrap
          h2.section__sub-title 사용중인 편리한 도구
          ul
            li Stylelint : 코드 모양 지정
            li ESLint : 코드 린팅
            li Prettier : 코드 포매팅
            li VScode 확장 프로그램 : 모든 인원의 환경과 코드 모양을 동일하게 유지하는데 도움을 줌
        .txt-wrap
          h2.section__sub-title 포함된 라이브러리
          ul
            li Lodash
            li Lost
            li GSAP v3
            li FontAwesome v6
        .txt-wrap
          h2.section__sub-title SUPER-ATOM-UI 사용 주기 시나리오
          ul
            li
              strong 디자인 시스템 설정 단계
              p 프로젝트에 따라 정의된 디자인 시스템 값을 SUPER-ATOM-UI에 반영합니다. src/style/settings 폴더에서 작성합니다.
              br
            li
              strong 디자인 시스템 작성 단계 - Element
              p User agent stylesheet에서 정의된 값을 오버라이딩 합니다.
              p 예) body {margin: 8px;} 를 body {margin:0;} 로 재정의. reset이라고 부르는 시트를 작성합니다.
              br
            li
              strong 컴포넌트 작성 단계 - 1 Atoms
              p Atoms는 원자라는 뜻으로 컴포넌트의 최소 단위를 작성합니다.
              p 예) input, button { border-width: 1px; border-style: solid; border-color: black}
              br
            li
              strong 컴포넌트 작성 단계 - 2 Molecules
              p Molecules는 분자라는 뜻으로 Atoms의 조합 입니다.
              p .search__bar > .search__form + .search__button 같은 컴포넌트가 이 단계에 속합니다.
              p 예) .input + .button { margin-left:8px; }
              br
            li
              strong 컴포넌트 작성 단계 - 3 Organisms
              p Organisms는 유기체라는 뜻으로 Molecules의 조합 입니다. Parts, Includes 등의 뉘앙스와 동일한 단계입니다. App bar 같은 컴포넌트가 이 단계에 속합니다.
              p 예) .header
              br
            li
              strong 페이지 작성 단계 - 1 Templates
              p Templates은 Organisms의 조합입니다.
              p 예) .template-blog
              br
            li
              strong 공통 코드 작성 단계
              p SUPER-ATOM-UI가 차용한 ABEM (Atomic Design + BEM) 네이밍을 사용합니다.
              p 직접 네이밍 컨벤션을 정하든 설계한 네이밍은 settings_component.scss 에 utility class를 만들어 사전 정의합니다.
              p 공통 컴포넌트 코드를 작성함으로써 전체 구조의 통일성과 재사용성이 확보됩니다.
              p 페이지를 Templates을 만들면서 발견하는 패턴을 공통 코드로 추출합니다.
              br
            li
              strong 페이지 작성 단계 - 2 Pages
              p Pages는 Templates에 데이터를 바인딩한 상태입니다.
              p 예) .pages__blog
              br
            li
              strong 리팩토링 단계
              p 페이지 및 공통 코드에서 사용자의 원칙에 위배되는 코드를 재귀적으로 공통 코드로 옮기거나 삭제합니다.
              br
            li
              strong 최적화 단계
              p 모든 코드를 정의된 규칙에 따라 검사, 재조정, 불필요한 코드 제거, 압축 합니다. 이 과정은 프로그램에 의해서 자동화되어야 합니다. 우리가 필요한 것은 자동화에 의존한 프로그램의 규칙 정의입니다.
              br
            li
              strong 빌드 단계
              p 작성한 코드를에 대한 최종 산출물을 얻습니다.
              br
            li
              strong 배포 단계
              p 빌드한 최종 산출물을 배포합니다.
    section.section.section-history
      .section__title-wrap
        h1.section__title 기록
      .section__content
        .txt-wrap
          p 저는 21.12.15일 11시에 투입되어서 제가 할 일을 알아본 결과 지금 이 글을 작성하는 것이 적절하다고 판단하여 내용을 적고 있는 것 입니다.
          p 21. 12.15 금일 13시부터 14시까지 진행된 내용을 "211215 회의록" 파일로 남겨놓았으니 참고하실 분은 참고 바랍니다.
          p 제가 남겨놓은 회의록은 퍼블리싱 업무 관점에서 작성하였습니다.
          p 21. 12.16 금일 9시부터 내용을 이어서 작성하였습니다.
