extends ../../layouts/base
block header
  +header('about')
include ../../includes/header
block content
  section.section.section-main.section-main
    .title-wrap
      h1.section__title SUPER-ATOM-UI
    .inner
      .txt-wrap
        h1.section__title Art of Cascading Style Sheet
        p SUPER-ATOM-UI uses CSS technically and artistically. Write your code to the essence of CSS.
      .txt-wrap
        h1.section__title About SUPER ATOMIC DESIGN
        p Super atom design absorbed ABEM. ABEM = Atomic Design + BEM. ABEM is a loose CSS Architecture.
        br
        | Too many changes make it difficult for us. Therefore, I borrow tools that are universally agreed upon. As you know, there is no need to reinvent the wheel.
        br
        | Super atomic design will track changes in the front-end ecosystem, absorbing the tools it deems most appropriate.
      .txt-wrap.js_gsap_target
        h1.section__title CSS is easy
        p Don't whine about CSS being difficult.
          br
          | CSS is literally Cascading Style Sheet.
          br
          | You just need to understand the rules well and use them correctly.
          br
          | If you feel this is difficult, you are just hoping for a luck.
      .txt-wrap.js_gsap_target
        h1.section__title UI framework for ui developer
        p SUPER-ATOM-UI is not for general users. First of all, you need to understand CSS well. It basically, it serves as a boilerplate for ui developers. After that, it's up to you to follow Super atomic design or not. Follow me when you're ready.
      .txt-wrap.js_gsap_target
        h1.section__title Background
        p The basis of the front-end is html, css, and js. You should be familiar with these specifications.
        p We look at the text on the screen. The number of every letter has that much information. We try to reduce this number of letters and duplicates. That's how tools such as pug and sass came out.
        p We try to shorten the time for naming. So a methodology like bem came out.
        p JavaScript is prone to human errors due to the design direction and the characteristics of the runtime language. So TypeScript was came out.
        p We often find it difficult to dedicate time to markup and style. That's why UI frameworks like Bootstrap came out. Sometimes you don't want to use the ui framework. You will probably make it yourself. Just like what I'm doing right now.
        p When we build complex web apps, we don't want to manipulate the dom directly anymore. So Javascript UI frameworks like react came out.
        p We have no choice but to use the UI framework based on the javascript UI framework. This process requires a lot of paperwork and understanding.
        p Can you understand and control all of this? Aren't you proud of your build that has turned into a monster without realizing it?
        p SUPER-ATOM-UI minimize dependencies by taking only what I need in common. And makes sense just to inspire others.
      .txt-wrap.js_gsap_target
        h1.section__title Super Atomic Design Guide
        p No unnecessary naming : Leave elements that do not require naming as elements.
        p Don't do magic : Do not use magic numbers unless the value must be fixed.
        p Don't let duplicates : Use inheritance as the essence of css. If you're going to make a mistake, use the tools to create a flow.
        p Don't rely on one thing : Make replacements easy with replacements in mind.
        p Using mixin : Trust SUPER-ATOM-UI and use it. This is the result of long consideration.
